apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"mongodb","app.kubernetes.io/instance":"grade-app","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"mongodb","argocd.argoproj.io/instance":"grade-app","helm.sh/chart":"mongodb-13.1.7"},"name":"mongodb","namespace":"default"},"spec":{"podManagementPolicy":"OrderedReady","replicas":3,"selector":{"matchLabels":{"app.kubernetes.io/component":"mongodb","app.kubernetes.io/instance":"grade-app","app.kubernetes.io/name":"mongodb"}},"serviceName":"mongodb-headless","template":{"metadata":{"labels":{"app.kubernetes.io/component":"mongodb","app.kubernetes.io/instance":"grade-app","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"mongodb","helm.sh/chart":"mongodb-13.1.7"}},"spec":{"affinity":{"nodeAffinity":null,"podAffinity":null,"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/component":"mongodb","app.kubernetes.io/instance":"grade-app","app.kubernetes.io/name":"mongodb"}},"namespaces":["default"],"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"command":["/scripts/setup.sh"],"env":[{"name":"BITNAMI_DEBUG","value":"false"},{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"MY_POD_HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"K8S_SERVICE_NAME","value":"mongodb-headless"},{"name":"MONGODB_INITIAL_PRIMARY_HOST","value":"mongodb-0.$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"},{"name":"MONGODB_REPLICA_SET_NAME","value":"rs0"},{"name":"MONGODB_ADVERTISED_HOSTNAME","value":"$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"},{"name":"MONGODB_ROOT_USER","value":"root"},{"name":"MONGODB_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"mongodb-root-password","name":"mongodb"}}},{"name":"MONGODB_REPLICA_SET_KEY","valueFrom":{"secretKeyRef":{"key":"mongodb-replica-set-key","name":"mongodb"}}},{"name":"ALLOW_EMPTY_PASSWORD","value":"no"},{"name":"MONGODB_SYSTEM_LOG_VERBOSITY","value":"0"},{"name":"MONGODB_DISABLE_SYSTEM_LOG","value":"no"},{"name":"MONGODB_DISABLE_JAVASCRIPT","value":"no"},{"name":"MONGODB_ENABLE_JOURNAL","value":"yes"},{"name":"MONGODB_PORT_NUMBER","value":"27017"},{"name":"MONGODB_ENABLE_IPV6","value":"no"},{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB","value":"no"}],"image":"docker.io/bitnami/mongodb:6.0.2-debian-11-r1","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/bitnami/scripts/ping-mongodb.sh"]},"failureThreshold":6,"initialDelaySeconds":30,"periodSeconds":20,"successThreshold":1,"timeoutSeconds":10},"name":"mongodb","ports":[{"containerPort":27017,"name":"mongodb"}],"readinessProbe":{"exec":{"command":["/bitnami/scripts/readiness-probe.sh"]},"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{"limits":{},"requests":{}},"securityContext":{"runAsNonRoot":true,"runAsUser":1001},"volumeMounts":[{"mountPath":"/bitnami/mongodb","name":"datadir","subPath":null},{"mountPath":"/bitnami/scripts","name":"common-scripts"},{"mountPath":"/scripts/setup.sh","name":"scripts","subPath":"setup.sh"}]}],"securityContext":{"fsGroup":1001,"sysctls":[]},"serviceAccountName":"mongodb","volumes":[{"configMap":{"defaultMode":360,"name":"mongodb-common-scripts"},"name":"common-scripts"},{"configMap":{"defaultMode":493,"name":"mongodb-scripts"},"name":"scripts"}]}},"updateStrategy":{"type":"RollingUpdate"},"volumeClaimTemplates":[{"metadata":{"name":"datadir"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"8Gi"}},"storageClassName":"ebssc"}}]}}
  creationTimestamp: "2022-11-13T10:24:12Z"
  generation: 1
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: grade-app
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    argocd.argoproj.io/instance: grade-app
    helm.sh/chart: mongodb-13.1.7
  name: mongodb
  namespace: default
  resourceVersion: "24202"
  uid: 9367cc5b-75f9-4558-9ce0-39c569d98752
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: grade-app
      app.kubernetes.io/name: mongodb
  serviceName: mongodb-headless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: grade-app
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-13.1.7
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: mongodb
                  app.kubernetes.io/instance: grade-app
                  app.kubernetes.io/name: mongodb
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - /scripts/setup.sh
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: MY_POD_HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: K8S_SERVICE_NAME
          value: mongodb-headless
        - name: MONGODB_INITIAL_PRIMARY_HOST
          value: mongodb-0.$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
        - name: MONGODB_REPLICA_SET_NAME
          value: rs0
        - name: MONGODB_ADVERTISED_HOSTNAME
          value: $(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local
        - name: MONGODB_ROOT_USER
          value: root
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb
        - name: MONGODB_REPLICA_SET_KEY
          valueFrom:
            secretKeyRef:
              key: mongodb-replica-set-key
              name: mongodb
        - name: ALLOW_EMPTY_PASSWORD
          value: "no"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_DISABLE_JAVASCRIPT
          value: "no"
        - name: MONGODB_ENABLE_JOURNAL
          value: "yes"
        - name: MONGODB_PORT_NUMBER
          value: "27017"
        - name: MONGODB_ENABLE_IPV6
          value: "no"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        image: docker.io/bitnami/mongodb:6.0.2-debian-11-r1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bitnami/scripts/ping-mongodb.sh
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        name: mongodb
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bitnami/scripts/readiness-probe.sh
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bitnami/mongodb
          name: datadir
        - mountPath: /bitnami/scripts
          name: common-scripts
        - mountPath: /scripts/setup.sh
          name: scripts
          subPath: setup.sh
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: mongodb
      serviceAccountName: mongodb
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 360
          name: mongodb-common-scripts
        name: common-scripts
      - configMap:
          defaultMode: 493
          name: mongodb-scripts
        name: scripts
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      storageClassName: ebssc
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 2
  currentRevision: mongodb-f7f7fbdf9
  observedGeneration: 1
  readyReplicas: 1
  replicas: 2
  updateRevision: mongodb-f7f7fbdf9
  updatedReplicas: 2
